"числа в go"

	"Какие численные типы есть в go?"
		int/int8/int16/int32/int64
		uint/uint8/uint16/uint32/uint64
		float32/float64
		complex64/complex128
		rune(int32)

	"Что такое обычный int и какие есть нюансы его реализации?"
		В зависимости от того какая архитектура платформы, на которой мы стартуем, 
		компилятор преобразует int в int32 для 32 разрядной архитектуры и в int64 для 64 разрядной архитектуры.

	"Как преобразовать строку в int и наоборот? Можно ли сделать int(string) и string(int) соответственно?"
		Преобразование типов между int и string указанным синтаксисом невозможно. Для преобразования необходимо использовать функции из пакета strconv стандартной библиотеки go.
		При этом для преобразования строк в/из int и int64 используются разные функции, strconv.Atoi и strconv.Itoa для int, strconv.ParseInt и strconv.FormatInt соответственно.

	"Сколько в памяти занимают реализации int32 и int64?"
		Из самого названия типа следует, что int32 занимает 4 байта (32/8), int64 занимает 8 байтов (64/8).
	
	"Какой результат получим если разделить int на 0 и float на 0?"
		Это вопрос с подвохом. Деление int на 0 в go невозможно и вызовет ошибку компилятора. 
		Тогда как деление float на 0 дает в своем результате бесконечность (+Inf).

	

