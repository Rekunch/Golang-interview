https://clck.ru/sU9rk

База данных (БД) — 
	это организованная структура, предназначенная для хранения, изменения
	и обработки взаимосвязанной информации преимущественно больших объемов. 
	Иными словами, БД — это  структурированное хранилище данных. Например, телефонная книга.
	
Реляционная база данных — это набор данных с предопределенными связями между ними. 
	Данные хранятся в виде набора таблиц, состоящих из столбцов и строк. 
	В таблицах хранится информация об объектах, представленных в базе данных. 
	В каждом столбце таблицы хранится определенный тип данных, в каждой ячейке — значение атрибута.
	Плюс : большавя вместимость
	Минус : хранится в hdd => медленные операции

Нереляционные системы (NoSQL) — системы, созданные для определенных моделей данных, обладающие гибкими схемами. 
	Иначе говоря, это БД, которые хранят данные не в виде табличных схем, строк и столбцов, а в иных форматах.
	Плюс : хранится в ram => быстрые операции
	Минус : малая вместимость

Нормализация — это процесс организации, структуризации данных в базе, 
	который обеспечивает большую гибкость базы данных за счет исключения избыточности и несогласованности зависимостей.

Индекс — отсортированный набор значений, связанных с таблицей или представлением с конкретной колонкой, который ускоряет получение данных. 
	Не стоит использовать, если в таблицу часто добавляются новые данные. 
	Индекс является структурой дерева, соответственно прихоидится каждый раз пересчитываеть его.

Первичный ключ (Primary key) — поле в таблице для идентификации каждой строки в таблице базы данных.
	В таблице может быть только одно такое поле, и все значения должны быть уникальными.

Внешний ключ (Foreign key) — это свойство, создаваемое для того, чтобы обеспечить связь между таблицами.
	Как правило, внешний ключ устанавливается для столбцов в подчиненной таблице и указывает на один из столбцов из главной таблицы.

Типы соединений между таблицами (Join)
	INNER JOIN — пересечение двух таблиц. 
		соединение, которое показывает только те данные из первой таблицы, которым соответствуют некоторые данные из второй таблицы. Остальные — опускаются.
	LEFT JOIN — объединение по левой таблице. 
		соединение, которое показывает все данные из первой таблицы и соответствующие данные из второй, если они есть. 
		Если же соответствующих данных нет, поля для данных из второй таблицы будут пустыми.
	RIGHT JOIN — объединение по правой таблице. 
		соединение, которое показывает все данные из второй таблицы и соответствующие данные из первой, если они есть. 
		Если же соответствующих данных нет, поля для данных из первой таблицы будут пустыми.
	FULL JOIN — обхединение двух таблиц.
		соединение, которое показывает все данные из первой и второй таблицы. 
		Если связанных данных в другой таблице нет, поля для этих данных будут пустыми.

AСID 
	A — Атомарность, гарантирует, что никакая транзакция не фиксируется в системе частично. Выполняются либо все её подоперации, либо ни одной.
	К примеру, перевод денег в банке на другой счет — это две операции:
	Перевести деньги на счет банка.
	Перевести деньги со счета банка на конкретный счет.
	Но может всякое случиться. Например, поступят в банк, а дальше выпадет какая-то ошибка и вторая операция не выполнится. Или наоборот: выполнится только вторая операция. Поэтому эти действия осуществляются в рамках одной транзакции, и в результате либо всё, либо ничего.

	С — Согласованность: каждая успешная транзакция всегда фиксирует только разрешаемые результаты.
	Это гарантирует, что все ограничения будут соблюдены (например, NOT NULL), иначе — транзакция откатится. 

	И — изолированность: во время выполнения транзакции параллельные транзакции не должны оказывать влияние на ее результат.
	Это дает нам возможность скрывать от всех не конечные состояния данных. Собственно, поэтому неуспешные транзакции не могут ничего сломать.

	Д — долговечность: если транзакция выполнена, то можно быть уверенным, что внесенные ею изменения не отменятся из-за какого-либо сбоя.