S - Принцип единственной ответственности (single responsibility principle)
   Для каждого класса должно быть определено единственное назначение. 
	Все ресурсы, необходимые для его осуществления, 
	должны быть инкапсулированы в этот класс и подчинены только этой задаче.

	Не надо создавать гига классы под все задачи. 1 задача = 1 класс

O - Принцип открытости/закрытости (open-closed principle)
   «программные сущности … должны быть открыты для расширения, но закрыты для модификации».

	можно добавлять новые методы для класса, не надо модифицировать текущие методы

L - Принцип подстановки Лисков (Liskov substitution principle)
   «функции, которые используют базовый тип, 
	должны иметь возможность использовать подтипы базового типа не зная об этом»

I - Принцип разделения интерфейса (interface segregation principle)
   «много интерфейсов, специально предназначенных для клиентов, лучше, чем один интерфейс общего назначения»

D - Принцип инверсии зависимостей (dependency inversion principle)
   «Зависимость на Абстракциях. Нет зависимости на что-то конкретное»